knitr::opts_chunk$set(echo = TRUE)
FFood <- read.csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2018/2018-09-04/fastfood_calories.csv")
library(skimr)
skim(FFood)
library(tidyverse)
FFood %>% group_by(restaurant) %>% summarise(calories = mean(calories, na.rm=TRUE)) %>% ggplot(.) + aes(x=reorder(restaurant, y=calories)) + geom_col()
library(tidyverse)
FFood %>% group_by(restaurant) %>% summarise(calories = mean(calories, na.rm=TRUE)) %>% ggplot(.) + aes(x=reorder(x=restaurant, y=calories)) + geom_col()
FFood %>% group_by(restaurant) %>% summarise(calories = mean(calories, na.rm=TRUE)) %>% ggplot(.) + aes(x=reorder(x=restaurant, y=calories)) + geom_bar()
FFood %>% group_by(restaurant) %>% summarise(calories = mean(calories, na.rm=TRUE)) %>% ggplot(.) + aes(x=reorder(x=restaurant, calories), y=calories) + geom_bar()
FFood %>% group_by(restaurant) %>% summarise(calories = mean(calories, na.rm=TRUE)) %>% ggplot(.) + aes(x=reorder(x=restaurant, calories), y=calories) + geom_bar(stat="identity")
FFood %>% group_by(restaurant) %>% summarise(calories = mean(calories, na.rm=TRUE)) %>% ggplot(.) + aes(x=reorder(x=restaurant, calories), y=calories) + geom_bar(stat="identity", fill="magenta") + labs(title="Average Calories for Fast Food Chains", x="Chain", y="Average Calories") + theme_light() + coord_flip()
library(tidyverse)
( My.Plot <- FFood %>% group_by(restaurant) %>% summarise(calories = mean(calories, na.rm=TRUE)) %>% ggplot(.) + aes(x=reorder(x=restaurant, calories), y=calories) + geom_bar(stat="identity", fill="magenta") + labs(title="Average Calories for Fast Food Chains", x="Chain", y="Average Calories") + theme_light() + coord_flip() )
library(plotly)
ggplotly(My.Plot)
?ggplotly
install.packages("carbonate")
library(carbonate)
carbon.code <- carbon$new()
carbon.code
carbon.code$uri
carbon.code$uri()
carbon.code <- carbon$new()
carbon.code$uri()
FFood %>% ggplot(.) + aes(x=restaurant, y=calories, fill=restaurant) + geom_jitter() + geom_boxplot() + guides(fill=FALSE)
FFood %>% ggplot(.) + aes(x=restaurant, y=calories, fill=restaurant, color=restaurant) + geom_boxplot(alpha=0.25) + geom_jitter() + guides(fill=FALSE, color=FALSE)
FFood %>% ggplot(.) + aes(x=restaurant, y=calories, fill=restaurant, color=restaurant, text=item) + geom_boxplot(alpha=0.25) + geom_jitter() + guides(fill=FALSE, color=FALSE) %>% ggplotly()
Res.1 <- FFood %>% ggplot(.) + aes(x=restaurant, y=calories, fill=restaurant, color=restaurant, text=item) + geom_boxplot(alpha=0.25) + geom_jitter() + guides(fill=FALSE, color=FALSE)
ggplotly(Res.1)
Res.1 <- FFood %>% ggplot(.) + aes(x=restaurant, y=calories, fill=restaurant, color=restaurant, text=item) + geom_boxplot(alpha=0.25) + geom_jitter() + guides(fill=FALSE, color=FALSE)
ggplotly(Res.1, tooltip = "text")
table(FFood$item)
table(FFood$item) %>% top_n(10)
janitor::tabyl(FFood$item) %>% top_n(10)
janitor::tabyl(FFood$item) %>% top_n(-10)
janitor::tabyl(FFood$item) %>% top_n(-3)
janitor::tabyl(FFood$item) %>% top_n(1)
janitor::tabyl(FFood$item) %>% top_n(-1)
FFood$item[FFood$item==""]
FFood$item[FFood$item=="",]
FFood$item[FFood$item==""]
levels(FFood$item)
Res.1 <- FFood %>% ggplot(.) + aes(x=restaurant, y=calories, fill=restaurant, color=restaurant, text=item) + geom_boxplot(alpha=0.25) + geom_jitter(size=0.25) + guides(fill=FALSE, color=FALSE)
ggplotly(Res.1)
Res.1 <- FFood %>% ggplot(.) + aes(x=restaurant, y=calories, fill=restaurant, color=restaurant, text=item) + geom_boxplot(alpha=0.25) + geom_jitter(size=0.25) + guides(fill=FALSE, color=FALSE)
ggplotly(Res.1, tooltip = "text")
?geom_boxplot
Res.1 <- FFood %>% ggplot(.) + aes(x=restaurant, y=calories, fill=restaurant, color=restaurant, text=item) + geom_boxplot(alpha=0.25, outlier.shape = NA) + geom_jitter(size=0.25) + guides(fill=FALSE, color=FALSE)
ggplotly(Res.1, tooltip = "text")
Res.1 <- FFood %>% ggplot(.) + aes(x=restaurant, y=calories, fill=restaurant, color=restaurant, text=item) + geom_boxplot(alpha=0.25, outlier.shape = NA, varwidth=TRUE) + geom_jitter(size=0.25) + guides(fill=FALSE, color=FALSE)
ggplotly(Res.1, tooltip = "text")
FFood %>% filter(grepl("Chicken"))
FFood %>% filter(grepl('Chicken'))
FFood %>% filter(grepl('Chicken'), item)
FFood %>% filter(item, grepl('Chicken'))
FFood %>% filter(., grepl('Chicken'), item)
?grepl
FFood %>% filter(grepl('Chicken'), item)
FFood %>% filter(grepl('Chicken', item))
FFood %>% filter(grepl('Chicken', item))
grepl('Chicken', FFood$item)
FFood <- FFood %>% transmute(Chicken = grepl('Chicken',item))
FFood
janitor::tabyl(restaurant, Chicken)
FFood %>% janitor::tabyl(restaurant, Chicken)
names(FFood)
knitr::opts_chunk$set(echo = TRUE)
FFood <- read.csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2018/2018-09-04/fastfood_calories.csv")
FFood <- FFood %>% mutate(Chicken = grepl('Chicken',item))
FFood %>% janitor::tabyl(restaurant, Chicken)
FFood %>% filter(restaurant == "Chick Fil-A")
FFood <- FFood %>% mutate(Chicken = grepl('Chicken'|'Chick-n',item))
FFood <- FFood %>% mutate(Chicken = grepl('Chicken|Chick-n',item))
FFood <- FFood %>% mutate(Chicken = grepl('Chicken|Chick-n',item))
FFood %>% filter(restaurant == "Chick Fil-A")
.Random.seed
source(url("https://raw.githubusercontent.com/robertwwalker/DADMStuff/master/TS-source.R"))
source(url("https://raw.githubusercontent.com/robertwwalker/DADMStuff/master/TS-source.R"))
ARMAacf(ar=0.5)
ARMAacf(ar=0.5)
ARMAacf(ar=0.5)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
library(tidyverse)
library(haven)
br7983 <- read_stata(url("https://github.com/robertwwalker/DADMStuff/raw/master/br7983.dta"))
# View(dataset)
library(skimr)
skim(br7983)
library(magrittr)
# Fix the dates into a readable format.
br7983 %<>% mutate(DateM = as.Date(paste0(substr(month, start=1, stop=2),"-",substr(month, start=3, stop=4),"-01"), format = "%y-%m-%d"))
# Plot the data with a proper time metric.
br7983 %>% ggplot(., aes(x=DateM, y=govpop)) + geom_line() + hrbrthemes::theme_ipsum_rc() + labs(x="Time", y="Government Popularity")
br7983 %<>% mutate(GovPopD = c(NA,diff(govpop, differences = 1)), GovPopL = log(govpop)) %>% mutate(GovPopLD = c(NA,diff(GovPopL, differences = 1)))
br7983.Sorted <- br7983 %>% arrange(DateM)
# Could also be done on month because it is sortable.
head(br7983.Sorted)
br7983 %>% ggplot(., aes(x=DateM, y= GovPopLD)) + geom_point() + geom_line(aes(y=govpopld)) + hrbrthemes::theme_modern_rc() + labs(y="Difference in Logged Government Popularity", x="Date [Month]")
acf(br7983$govpop)
pacf(br7983$govpop)
summary(ur.df(br7983$govpopl, lags = 3, selectlags = "fixed", type="trend"))
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
library(tidyverse)
library(haven)
br7983 <- read_stata(url("https://github.com/robertwwalker/DADMStuff/raw/master/br7983.dta"))
# View(dataset)
library(skimr)
skim(br7983)
library(magrittr)
# Fix the dates into a readable format.
br7983 %<>% mutate(DateM = as.Date(paste0(substr(month, start=1, stop=2),"-",substr(month, start=3, stop=4),"-01"), format = "%y-%m-%d"))
# Plot the data with a proper time metric.
br7983 %>% ggplot(., aes(x=DateM, y=govpop)) + geom_line() + hrbrthemes::theme_ipsum_rc() + labs(x="Time", y="Government Popularity")
br7983 %<>% mutate(GovPopD = c(NA,diff(govpop, differences = 1)), GovPopL = log(govpop)) %>% mutate(GovPopLD = c(NA,diff(GovPopL, differences = 1)))
br7983.Sorted <- br7983 %>% arrange(DateM)
# Could also be done on month because it is sortable.
head(br7983.Sorted)
br7983 %>% ggplot(., aes(x=DateM, y= GovPopLD)) + geom_point() + geom_line(aes(y=govpopld)) + hrbrthemes::theme_modern_rc() + labs(y="Difference in Logged Government Popularity", x="Date [Month]")
acf(br7983$govpop)
pacf(br7983$govpop)
library(urca)
# Dickey-Fuller regression: Null is unit root.
summary(ur.df(br7983$govpopl, lags = 3, selectlags = "fixed", type="trend"))
summary(ur.df(br7983$govpopl, lags = 3, selectlags = "Fixed", type="trend"))
auto.arima(br7983$govpopl)
library(forecast)
auto.arima(br7983$govpopl)
auto.arima(br7983$govpop)
auto.arima(br7983$govpopl)
names(br7983)
?install.packages
arima.sim
?arima.sim
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
valueAR <- c(0.8)
valueMA <- c(0.1)
My.Data <- data.frame(arma1 = arima.sim(list(ar = valueAR, ma=valueMA), n = 100), time=seq(1:100)) My.Data %>% ggplot(., aes(x=time, y=arma1)) + geom_line() + labs(title = paste0("An ARMA(",valueAR,",",valueMA,")")) + hrbrthemes::theme_ipsum_rc()
valueAR <- c(0.8)
valueMA <- c(0.1)
My.Data <- data.frame(arma1 = arima.sim(list(ar = valueAR, ma = valueMA), n = 100), time=seq(1:100)) My.Data %>% ggplot(., aes(x=time, y=arma1)) + geom_line() + labs(title = paste0("An ARMA(",valueAR,",",valueMA,")")) + hrbrthemes::theme_ipsum_rc()
?ARMAacf
0.8^3
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
library(tidyverse)
br7983$My.Date <- as.Date(month, format="%y%m")
br7983$My.Date <- as.Date(br7983$month, format="%y%m")
?as.Date
acf(br7983$empxl)
pacf(br7983$empxl)
pacf(br7983$empxl)
library(TSA)
arimax
?arimax
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flandt, transfer = list(c(1,2)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flandt, transfer = list(c(0,2)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flandt, transfer = list(c(0,1)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flandt, transfer = list(c(1,1)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flandt, transfer = list(c(1,0)))
names(br7983)
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flandt, transfer = list(c(1,1)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flandt, transfer = list(c(1,0)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xreg = br7983$flandt)
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xreg = br7983$fland)
br7983 %<>% mutate(Lag.flandt = lag(flandt))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xreg = br7983$Lag.flandt)
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flandt, transfer = list(c(1,0)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flandt, transfer = list(c(2,0)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flandt, transfer = list(c(1,1)))
br7983 %<>% mutate(Lag.fland = lag(fland))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xreg = br7983$Lag.fland)
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xreg = br7983$Lag.flandt)
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$fland, transfer = list(c(1,0)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$fland, transfer = list(c(2,0)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$fland, transfer = list(c(1,0)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$fland, transfer = list(c(1,1)))
?arimax
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 2), period = c(4,5)), xtransf = br7983$fland, transfer = list(c(1,1)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = c(4,5)), xreg = br7983$fland)
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 2), period = c(4,5)), xreg = br7983$fland)
arima(br7983$govpopld, seasonal = list(order = c(0, 0, 2), period = c(4,5)), xreg = br7983$fland)
?arima
arima(br7983$govpopld, seasonal = list(order = c(0, 0, 2), period = c(4,5)), xreg = br7983$fland, method = "CSS-ML")
arima(br7983$govpopld, seasonal = list(order = c(0, 0, 2), period = c(4,5)), xreg = br7983$fland, method = "CSS")
arima(br7983$govpopld, seasonal = list(order = c(0, 0, 2), period = c(4,5)), xreg = br7983$fland, method = "ML")
arima(br7983$govpopld, seasonal = list(order = c(0, 0, 2), period = c(4,5)), xreg = br7983$flandt, method = "ML")
arima(br7983$govpopld, seasonal = list(order = c(0, 0, 2), period = c(4,5)), method = "ML")
summary(arima(br7983$govpopld, seasonal = list(order = c(0, 0, 2), period = c(4,5)), method = "ML"))
summary(arima(br7983$govpopld, seasonal = list(order = c(0, 0, 2), period = c(4,5)), method = "ML"))
summary(arima(br7983$govpopld, seasonal = list(order = c(0, 0, 2), period = c(4,5)))
)
summary(arima(br7983$govpopld, seasonal = list(order = c(0, 0, 2), period = 4)))
summary(arima(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4)))
summary(arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xreg=br7983$Lag.fland))
summary(arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xreg=br7983$flanddlag1))
summary(arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xreg=br7983$flandd))
summary(arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xreg=br7983$flanddlag1))
# Replicating the abrupt permanent in April
summary(arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xreg=br7983$flandd))
# Replicating the abrupt permanent in May
summary(arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xreg=br7983$flanddlag1))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 2), period = c(4,5)), xtransf = br7983$flandd, transfer = list(c(0,1)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4)), xtransf = br7983$flandd, transfer = list(c(0,1)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flandd, transfer = list(c(0,1)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flandd, transfer = list(c(1,0)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flandd, transfer = list(c(0,0)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flandd, transfer = list(c(1,0)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flandd, transfer = list(c(0,2)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flandd, transfer = list(c(0,1)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flandd, transfer = list(c(0,1)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flandd, transfer = list(c(1,1)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flandd, transfer = list(c(1,0)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flanddlag1, transfer = list(c(1,0)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flanddlag1, transfer = list(c(1,0)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flanddlag1, transfer = list(c(1,0)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flanddlag1, transfer = list(c(0,1)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flanddlag1, transfer = list(c(1,1)))
source('~/Desktop/Essex-2020/Code/ARIMAX-Essex-2020.R')
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flandd, transfer = list(c(1,1)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flandd, transfer = list(c(1,0)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flandd, transfer = list(c(0,0)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flandd, transfer = list(c(1,0)))
arimax(br7983$govpopld, seasonal = list(order = c(0, 0, 1), period = 4), xtransf = br7983$flandd, transfer = list(c(2,0)))
arimax
?arimax
install.packages("STM")
install.packages("MTS")
library(MTS)
?tfm1
m1 <- tfm1(br7983$GovPopLD, br7983$flandd, orderN = c(1,0,4), orderX = c(1,1,1))
m1 <- tfm1(br7983$GovPopLD, br7983$flandd, orderN = c(0,0,1), orderX = c(1,1,1))
m1 <- tfm1(br7983$GovPopLD, br7983$flandd, orderN = c(0,0,1), orderX = c(0,1,1))
# Replication Code for Chapter 1
library(haven)
HouseControl <- read_stata("HouseControl.dta")
library(tidyverse)
# stata: graph twoway connected prop_dem year, scheme(s1mono) title(Partisan Control of the U.S. House)
HouseControl %>% ggplot(., aes(x=year, y=prop_dem)) + geom_line() + geom_point() + labs(y="Percent Democrat", title="Partisan Control of the U.S. House")
setwd("~/")
source('~/Desktop/Essex-2020/Code/ARIMAX-Essex-2020.R')
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
library(tidyverse)
library(foreign)
HR.Data <- read.dta("ISQ99-Essex.dta")
library(skimr)
skim(HR.Data)
# xtdes equivalent also
# xtsum equivalent
library(tidyverse)
library(plm)
source(url("https://raw.githubusercontent.com/robertwwalker/DADMStuff/master/xtsum.R"))
# Be careful with the ID variable, the safest is to make it factor; this can go wildly wrong
xtsum(as.factor(IDORIGIN)~., data=HR.Data)
library(magrittr)
# The lag is already in the data.
HR.Data %>% group_by(as.factor(IDORIGIN)) %>% mutate(myAINEWL = lag(AINEW, order_by = YEAR)) %$% table(myAINEWL,AINEW)
# In a probability metric
HR.Data %>% group_by(as.factor(IDORIGIN)) %>% mutate(myAINEWL = lag(AINEW, order_by = YEAR)) %$% table(myAINEWL,AINEW) %>% prop.table(., 1)
names(HR.Data)
HR.Data %>% group_by(as.character(IDORIGIN)) %>% mutate(myAINEWL = lag(AINEW, order_by = YEAR)) %$% table(myAINEWL,AINEW)
# In a probability metric
HR.Data %>% group_by(as.character(IDORIGIN)) %>% mutate(myAINEWL = lag(AINEW, order_by = YEAR)) %$% table(myAINEWL,AINEW) %>% prop.table(., 1)
HR.Data %$% table(AILAG,AINEW)
HR.Data %$% table(AILAG,AINEW) %>% prop.table(., 1)
HR.Data %$% table(AILAG,AINEW) %>% prop.table(., 1)
names(HR.Data)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
library(tidyverse)
library(foreign)
HR.Data <- read.dta("ISQ99-Essex.dta")
library(skimr)
skim(HR.Data)
# xtdes equivalent also
# xtsum equivalent
library(tidyverse)
library(plm)
source(url("https://raw.githubusercontent.com/robertwwalker/DADMStuff/master/xtsum.R"))
# Be careful with the ID variable, the safest is to make it factor; this can go wildly wrong
xtsum(as.factor(IDORIGIN)~., data=HR.Data)
library(magrittr)
# The lag is already in the data.
HR.Data %$% table(AILAG,AINEW)
# In a probability metric
HR.Data %$% table(AILAG,AINEW) %>% prop.table(., 1)
# Baseline Countries [omit those missing AINEW]
Country.Total <- length(table(HR.Data$IDORIGIN[!is.na(HR.Data$AINEW)]))
Country.Total
# xttab
sapply(1:5, function(x) {length(table(HR.Data$IDORIGIN[HR.Data$AINEW==x]))})
sapply(1:5, function(x) {length(table(HR.Data$IDORIGIN[HR.Data$AINEW==x]))})/Country.Total
HR.PLMD <- pdata.frame(HR.Data, index=c("IDORIGIN","YEAR"))
# Use purtest for unit roots
# Something is wrong with it and my FORTRAN compilers.
summary(plm(AINEW~AILAG+BRIT+PCGTHOU+LPOP+PERCHPCG+PERCHPOP+MIL2+LEFT+DEMOC3+IWARCOW2+CWARCOW, data=HR.PLMD, model = "pooling"))
summary(plm(AINEW~AILAG+BRIT+PCGTHOU+LPOP+PERCHPCG+PERCHPOP+MIL2+LEFT+DEMOC3+IWARCOW2+CWARCOW, data=HR.PLMD, model = "fd"))
summary(plm(AINEW~AILAG+BRIT+PCGTHOU+LPOP+PERCHPCG+PERCHPOP+MIL2+LEFT+DEMOC3+IWARCOW2+CWARCOW, data=HR.PLMD, model = "within"))
Mod.FE <- plm(AINEW~AILAG+BRIT+PCGTHOU+LPOP+PERCHPCG+PERCHPOP+MIL2+LEFT+DEMOC3+IWARCOW2+CWARCOW, data=HR.PLMD, model = "within")
# Note something gets dropped
summary(plm(AINEW~AILAG+BRIT+PCGTHOU+LPOP+PERCHPCG+PERCHPOP+MIL2+LEFT+DEMOC3+IWARCOW2+CWARCOW, data=HR.PLMD, model = "between"))
Mod.RE <- plm(as.numeric(AINEW)~AILAG+BRIT+PCGTHOU+LPOP+PERCHPCG+PERCHPOP+MIL2+LEFT+DEMOC3+IWARCOW2+CWARCOW, data=HR.PLMD, model = "random")
summary(Mod.RE)
phtest(Mod.FE,Mod.RE)
library(panelr)
HR.Data <- HR.Data %>% mutate(ID = as.character(IDORIGIN))
HR.PD <- panel_data(HR.Data, id=ID, wave=YEAR) %>% complete_data(., min.waves = 7)
# This model really doesn't like the lagged dependent variable.
HR.WBM <- wbm(AINEW~MIL2+LEFT+PCGTHOU+LPOP+PERCHPCG+PERCHPOP+CWARCOW+IWARCOW2+DEMOC3 | BRIT, data=HR.PD)
summary(HR.WBM)
HR.Data <- HR.Data %>% mutate(ID = as.character(IDORIGIN))
HR.PD <- panel_data(HR.Data, id=ID, wave=YEAR) %>% complete_data(., min.waves = 7)
HR.WBMH <- wbm(AINEW~MIL2+LEFT+PCGTHOU+LPOP+PERCHPCG+PERCHPOP+CWARCOW+IWARCOW2+DEMOC3 | BRIT | (LPOP | ID) , data=HR.PD)
summary(HR.WBMH)
HR.WBMH <- wbm(AINEW~MIL2+LEFT+PCGTHOU+LPOP+PERCHPCG+PERCHPOP+CWARCOW+IWARCOW2+DEMOC3 | BRIT | (LPOP | ID), data=HR.PD, use.wave = TRUE)
summary(HR.WBMH)
library(panelAR)
install.packages("panelAR")
library(panelAR)
library(panelAR)
Mod1 <- panelAR(AINEW~MIL2+LEFT+PCGTHOU+LPOP+PERCHPCG+PERCHPOP+CWARCOW+IWARCOW2+DEMOC3+BRIT, ID, YEAR, autoCorr = "ar1")
library(panelAR)
Mod1 <- panelAR(AINEW~MIL2+LEFT+PCGTHOU+LPOP+PERCHPCG+PERCHPOP+CWARCOW+IWARCOW2+DEMOC3+BRIT, panelVar = "ID", timeVar="YEAR", autoCorr = "ar1")
Mod1 <- panelAR(AINEW~MIL2+LEFT+PCGTHOU+LPOP+PERCHPCG+PERCHPOP+CWARCOW+IWARCOW2+DEMOC3+BRIT, panelVar = "ID", timeVar="YEAR", autoCorr = "ar1", data=HR.Data)
library(panelAR)
Mod1 <- panelAR(AINEW~MIL2+LEFT+PCGTHOU+LPOP+PERCHPCG+PERCHPOP+CWARCOW+IWARCOW2+DEMOC3+BRIT, panelVar = "ID", timeVar="YEAR", autoCorr = "ar1", data=HR.Data, rho.na.rm=TRUE)
summary(Mod1)
Mod1 <- panelAR(AINEW~MIL2+LEFT+PCGTHOU+LPOP+PERCHPCG+PERCHPOP+CWARCOW+IWARCOW2+DEMOC3+BRIT, panelVar = "ID", timeVar="YEAR", autoCorr = "ar1", data=HR.Data, rho.na.rm=TRUE, panelCorrMethod='pcse')
summary(Mod1)
plot(Mod1)
Mod1$panelStructure$rho
library(haven)
PT94 <- read_dta("Poe and Tate APSR 1994.dta")
PT94A <- foreign::read.dta("Poe and Tate APSR 1994.dta")
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
library(tidyverse)
source(url("https://raw.githubusercontent.com/robertwwalker/DADMStuff/master/xtsum.R"))
xtsum(ccode~.data=PT94)
xtsum(ccode~.,data=PT94)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
library(tidyverse)
library(foreign)
HR.Data <- read.dta("ISQ99-Essex.dta")
library(skimr)
skim(HR.Data)
# xtdes equivalent also
# xtsum equivalent
library(tidyverse)
library(plm)
source(url("https://raw.githubusercontent.com/robertwwalker/DADMStuff/master/xtsum.R"))
# Be careful with the ID variable, the safest is to make it factor; this can go wildly wrong
xtsum(as.factor(IDORIGIN)~., data=HR.Data)
Country.Total <- length(table(HR.Data$IDORIGIN[!is.na(HR.Data$AINEW)]))
Country.Total
# xttab
sapply(1:5, function(x) {length(table(HR.Data$IDORIGIN[HR.Data$AINEW==x]))})
sapply(1:5, function(x) {length(table(HR.Data$IDORIGIN[HR.Data$AINEW==x]))})/Country.Total
source(url("https://raw.githubusercontent.com/robertwwalker/DADMStuff/master/xtsum.R"))
xtsum(as.factor(ccode)~., data=PT94)
xtsum(as.factor(IDORIGIN)~., data=HR.data)
PT94    <- read.dta("stata/statalab/Poe and Tate APSR 1994.dta")
PT94    <- read.dta("Poe and Tate APSR 1994.dta")
source(url("https://raw.githubusercontent.com/robertwwalker/DADMStuff/master/xtsum.R"))
xtsum(as.factor(ccode)~., data=PT94)
PT94
PT94PD <- pdata.frame(PT94)
library(plm)
PT94PD <- pdata.frame(PT94, index=c("ccode","year"))
PT94PD
plm(ainew~pcginc, data=PT94PD, model = "pooling")
summary(plm(ainew~pcginc, data=PT94PD, model = "pooling"))
summary(plm(ainew~pcginc, data=PT94PD, model = "pooling"))
summary(plm(ainew~pcgnp+milctr2+lpop, data=PT94PD, model = "between"))
summary(plm(ainew~pcgnp+milctr2+lpop, data=PT94PD, model = "within"))
summary(lm(ainew~pcgnp+milctr2+lpop+as.factor(ccode), data=PT94))
summary(plm(ainew~pcginc, data=PT94PD, model = "random"))
ModRE <- plm(ainew~pcginc, data=PT94PD, model = "random")
ModFE <- plm(ainew~pcginc, data=PT94PD, model = "within")
phtest(ModFE,ModRE)
ModFE <- plm(ainew~pcginc, data=PT94PD, model = "fd")
summary(ModFE)
PT94    <- read.dta("Poe and Tate APSR 1994.dta")
# Open data (from Stata)
# This uses the library "foreign", rather than my usual "haven".
PT94    <- foreign::read.dta("Poe and Tate APSR 1994.dta")
source(url("https://raw.githubusercontent.com/robertwwalker/DADMStuff/master/xtsum.R"))
xtsum(as.factor(ccode)~., data=PT94)
PT94
str(PT94)
read_dta
haven::read_dta
PT94B <- haven::read_dta(file = "Poe and Tate APSR 1994.dta")
names(PT94B)
xtsum(as.character(ccode)~.)
xtsum(as.character(ccode)~., data=PT94B)
PT94B <- haven::read_stata(file = "Poe and Tate APSR 1994.dta")
xtsum(as.character(ccode)~., data=PT94B)
PT94B <- foreign::read.dta(file = "Poe and Tate APSR 1994.dta")
xtsum(as.character(ccode)~., data=PT94B)
class(PT94B$vanhdemo)
class(PT94A$vanhdemo)
class(PT94$vanhdemo)
HR.data <- read_stata("ISQ99-Essex.dta")
HR.data <- haven::read_stata("ISQ99-Essex.dta")
class(HR.Data)
class(PT94)
source(url("https://raw.githubusercontent.com/robertwwalker/DADMStuff/master/xtsum.R"))
PT94    <- foreign::read.dta("Poe and Tate APSR 1994.dta")
xtsum(as.factor(ccode)~., data=PT94)
HR.data <- haven::read_stata("ISQ99-Essex.dta")
HR.data <- haven::read_stata("~/Downloads/ISQ99-Essex.dta")
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
library(tidyverse)
HR.Data2 <- haven::read_stata("ISQ99-Essex.dta")
class(HR.Data2)
HR.Data2 <- read.dta("ISQ99-Essex.dta")
HR.Data2 <- foreign::read.dta("ISQ99-Essex.dta")
HR.Data2 <- foreign::read.dta("ISQ99-Essex.dta")
getwd()
dir()
load(url("https://github.com/robertwwalker/DADMStuff/raw/master/R-Workspace-Lecture-1.RData"))
load(url("https://github.com/robertwwalker/DADMStuff/raw/master/R-Workspace-Lecture-1.RData"))
Bonds %>% datatable(class = "compact", rownames = FALSE, extensions = "Buttons",
options = list(dom = "tBp", scrollY = TRUE, buttons = c("csv", "excel"), pageLength = 8)) %>%
DT::formatRound(1:4, digits = 1)
install.packages("tidyverse")
library(readxl)
Lab1 <- read_excel("Downloads/Lab1.xlsx",
sheet = "Bonds")
View(Lab1)
library(readxl)
Lab1 <- read_excel("Downloads/Lab1.xlsx")
View(Lab1)
install.packages("tidyverse")
cars
pressure
library(readxl)
Bonds <- read_excel("Downloads/Lab1.xlsx",
sheet = "Bonds")
library(readxl)
Bonds <- read_excel("Downloads/Lab1.xlsx",
sheet = "Bonds")
Bonds
library(tidyverse)
setwd("~/Sandbox/awful/static/xaringan/P1KO")
setwd("~/Sandbox/awful/static/xaringan/S1KO")
